{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react'; // import { Link } from 'react-router-dom';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import openlaw\n\nimport { APIClient, Openlaw } from \"openlaw\";\nimport OpenLawForm from \"openlaw-elements\";\nimport AgreementPreview from \"../components/AgreementPreview\"; // import SelectionPanel from \"../components/SelectionPanel\";\n// import SubPanel from \"../components/SubPanel\";\n\nimport \"openlaw-elements/dist/openlaw-elements.min.css\";\nimport \"./HeavenlyInterface.css\"; // importing UI components\n\nimport { Grid, Button, Loader, Card, Container } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport BannerHeader from \"./BannerHeader\"; // configure openlaw\n\nvar URL = \"https://etherizeit.openlaw.io\"; // You can change TEMPLATE_NAME to 'articles-of-organization' to make the code work ...\n// Right now, both deal templates on Etherizeit instance are causing the same issue\n\nvar OPENLAW_USER = 'etherize@protonmail.com';\nvar OPENLAW_PASSWORD = 'useresponsibly';\n\nvar HeavenlyInterface =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HeavenlyInterface, _React$Component);\n\n  function HeavenlyInterface() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HeavenlyInterface);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HeavenlyInterface)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      // Variables for OpenLaw API\n      openLawConfig: null,\n      templateName: null,\n      //Variables for the UI\n      formVisible: true,\n      reviewVisible: false,\n      finalizeVisible: false,\n      // State variables for OpenLaw\n      title: \"\",\n      template: \"\",\n      compiledTemplate: null,\n      parameters: {},\n      executionResult: null,\n      variables: null,\n      // State variables for preview component\n      previewHTML: null,\n      loading: false,\n      ipfsLoading: false,\n      success: false,\n      progress: 0,\n      progressMessage: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"fileInputRef\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var openLawConfig, apiClient, template, content, versions, title, compiledTemplate, parameters, _ref2, executionResult, errorMessage, variables;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //create config\n              openLawConfig = {\n                server: URL,\n                templateName: _this.props.templateName,\n                userName: OPENLAW_USER,\n                password: OPENLAW_PASSWORD\n              };\n              apiClient = new APIClient(openLawConfig.server);\n              console.log(openLawConfig.userName); //const { web3, accounts, contract } = this.props;\n              //create an instance of the API client with url as parameter\n\n              apiClient.login(openLawConfig.userName, openLawConfig.password).then(console.log); //Retrieve your OpenLaw template by name, use async/await\n\n              _context.next = 6;\n              return apiClient.getTemplate(openLawConfig.templateName);\n\n            case 6:\n              template = _context.sent;\n              console.log(template); //Retreive the OpenLaw Template, including MarkDown\n\n              content = template.content;\n              console.log(\"template..\", template); //Get the most recent version of the OpenLaw API Tutorial Template\n\n              _context.next = 12;\n              return apiClient.getTemplateVersions(openLawConfig.templateName, 20, 1);\n\n            case 12:\n              versions = _context.sent;\n              console.log(\"versions..\", versions[0], versions.length);\n              title = template.title; //Get my compiled Template, for use in rendering the HTML in previewTemplate\n\n              _context.next = 17;\n              return Openlaw.compileTemplate(content);\n\n            case 17:\n              compiledTemplate = _context.sent;\n\n              if (!compiledTemplate.isError) {\n                _context.next = 20;\n                break;\n              }\n\n              throw \"template error\" + compiledTemplate.errorMessage;\n\n            case 20:\n              console.log(\"my compiled template..\", compiledTemplate);\n              parameters = {\n                \"Organizer Signature\": '{\"email\":\"etherize@protonmail.com\"}'\n              };\n              _context.next = 24;\n              return Openlaw.execute(compiledTemplate.compiledTemplate, {}, parameters);\n\n            case 24:\n              _ref2 = _context.sent;\n              executionResult = _ref2.executionResult;\n              errorMessage = _ref2.errorMessage;\n              console.log(\"execution result:\", executionResult); // ** This is helpful for logging in development, or throwing exceptions at runtime.\n\n              if (errorMessage) {\n                console.error(\"Openlaw Execution Error:\", errorMessage);\n              }\n\n              _context.next = 31;\n              return Openlaw.getExecutedVariables(executionResult, {});\n\n            case 31:\n              variables = _context.sent;\n              console.log(\"variables:\", variables);\n\n              _this.setState({\n                openLawConfig: openLawConfig,\n                apiClient: apiClient,\n                title: title,\n                template: template,\n                compiledTemplate: compiledTemplate,\n                parameters: parameters,\n                executionResult: executionResult,\n                variables: variables\n              });\n\n            case 34:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (key, value) {\n      var compiledTemplate = _this.state.compiledTemplate;\n      var parameters = key ? _objectSpread({}, _this.state.parameters, _defineProperty({}, key, [key].includes(\"Email\") ? _JSON$stringify({\n        email: value\n      }) : value)) : _this.state.parameters;\n\n      var _Openlaw$execute = Openlaw.execute(compiledTemplate.compiledTemplate, {}, parameters),\n          executionResult = _Openlaw$execute.executionResult,\n          errorMessage = _Openlaw$execute.errorMessage;\n\n      var variables = Openlaw.getExecutedVariables(executionResult, {});\n\n      _this.setState({\n        parameters: parameters,\n        variables: variables,\n        executionResult: executionResult\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setTemplatePreview\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state, parameters, compiledTemplate, executionResult, agreements, previewHTML;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, parameters = _this$state.parameters, compiledTemplate = _this$state.compiledTemplate;\n              console.log(parameters);\n              _context2.next = 4;\n              return Openlaw.execute(compiledTemplate.compiledTemplate, {}, parameters);\n\n            case 4:\n              executionResult = _context2.sent;\n              _context2.next = 7;\n              return Openlaw.getAgreements(executionResult.executionResult);\n\n            case 7:\n              agreements = _context2.sent;\n              _context2.next = 10;\n              return Openlaw.renderForReview(agreements[0].agreement, {});\n\n            case 10:\n              previewHTML = _context2.sent;\n              _context2.next = 13;\n              return _this.setState({\n                previewHTML: previewHTML\n              });\n\n            case 13:\n              document.getElementById(\"preview\").scrollIntoView({\n                behavior: \"smooth\"\n              });\n\n              _this.setState({\n                showReview: true\n              });\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"buildOpenLawParamsObj\",\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(template) {\n        var parameters, object;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                parameters = _this.state.parameters;\n                object = {\n                  templateId: template.id,\n                  title: template.title,\n                  text: template.content,\n                  creator: \"Etherize\",\n                  parameters: parameters,\n                  overriddenParagraphs: {},\n                  agreements: {},\n                  draftId: \"\"\n                };\n                return _context3.abrupt(\"return\", object);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"sendDraft\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var _this$state2, openLawConfig, apiClient, progress, progressMessage;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _this$state2 = _this.state, openLawConfig = _this$state2.openLawConfig, apiClient = _this$state2.apiClient, progress = _this$state2.progress, progressMessage = _this$state2.progressMessage; //login to api\n\n              _this.setState({\n                loading: true,\n                progress: 20,\n                progressMessage: \"Uploading to OpenLaw...\"\n              },\n              /*#__PURE__*/\n              _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee4() {\n                var _this$props, accounts, contract, web3, token, OPENLAW_JWT, uploadParams, contractId;\n\n                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        _this$props = _this.props, accounts = _this$props.accounts, contract = _this$props.contract, web3 = _this$props.web3;\n                        _context4.next = 4;\n                        return apiClient.login(openLawConfig.userName, openLawConfig.password);\n\n                      case 4:\n                        token = _context4.sent;\n                        OPENLAW_JWT = token.headers.openlaw_jwt; //add Open Law params to be uploaded\n\n                        _context4.next = 8;\n                        return _this.buildOpenLawParamsObj(_this.state.template);\n\n                      case 8:\n                        uploadParams = _context4.sent;\n                        console.log(\"parmeters from user..\", uploadParams.parameters);\n                        _context4.next = 12;\n                        return apiClient.uploadDraft(uploadParams);\n\n                      case 12:\n                        contractId = _context4.sent;\n                        console.log(\"Contract ID: \", contractId);\n                        _context4.next = 16;\n                        return apiClient.sendDraft([], [], contractId);\n\n                      case 16:\n                        alert(\"Success! You should receive your Draft via e-mail.\");\n                        _context4.next = 25;\n                        break;\n\n                      case 19:\n                        _context4.prev = 19;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        alert(_context4.t0 + \". Did you specify an e-mail address in the 'Define' section?\");\n                        _context4.next = 24;\n                        return _this.setState({\n                          progressMessage: \"Uh oh, we've run into an error...\"\n                        });\n\n                      case 24:\n                        console.log(_context4.t0);\n\n                      case 25:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 19]]);\n              })));\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"sendContract\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6() {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              alert(\"Not yet enabled. Waiting for OpenLaw to fix their Deal feature, to issue multiple Contracts at once. \");\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"payFiat\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7() {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              alert(\"Pay Fiat is not yet enabled.\");\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"payCrypto\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee8() {\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              alert(\"Pay Crypto is not yet enabled.\");\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee10() {\n      var _this$state3, openLawConfig, apiClient, progress, progressMessage;\n\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _this$state3 = _this.state, openLawConfig = _this$state3.openLawConfig, apiClient = _this$state3.apiClient, progress = _this$state3.progress, progressMessage = _this$state3.progressMessage; //login to api\n\n              _this.setState({\n                loading: true,\n                progress: 20,\n                progressMessage: \"Uploading to OpenLaw...\"\n              },\n              /*#__PURE__*/\n              _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee9() {\n                var _this$props2, accounts, contract, web3, token, OPENLAW_JWT, uploadParams, contractId;\n\n                return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _context9.prev = 0;\n                        _this$props2 = _this.props, accounts = _this$props2.accounts, contract = _this$props2.contract, web3 = _this$props2.web3;\n                        _context9.next = 4;\n                        return apiClient.login(openLawConfig.userName, openLawConfig.password);\n\n                      case 4:\n                        token = _context9.sent;\n                        OPENLAW_JWT = token.headers.openlaw_jwt; //add Open Law params to be uploaded\n\n                        _context9.next = 8;\n                        return _this.buildOpenLawParamsObj(_this.state.template);\n\n                      case 8:\n                        uploadParams = _context9.sent;\n                        console.log(\"parmeters from user..\", uploadParams.parameters);\n                        _context9.next = 12;\n                        return apiClient.uploadContract(uploadParams);\n\n                      case 12:\n                        contractId = _context9.sent;\n                        console.log(\"Contract ID: \", contractId);\n                        _context9.next = 16;\n                        return apiClient.sendContract([\"ineptitude@gmail.com\"], [\"ineptitude@gmail.com\"], contractId);\n\n                      case 16:\n                        alert(\"Success! You should receive a request to sign the Agreement via e-mail.\");\n                        _context9.next = 25;\n                        break;\n\n                      case 19:\n                        _context9.prev = 19;\n                        _context9.t0 = _context9[\"catch\"](0);\n                        alert(\"Fail: \" + _context9.t0);\n                        _context9.next = 24;\n                        return _this.setState({\n                          progressMessage: \"Uh oh, we've run into an error...\"\n                        });\n\n                      case 24:\n                        console.log(_context9.t0);\n\n                      case 25:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9, null, [[0, 19]]);\n              })));\n\n            case 2:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    })));\n\n    return _this;\n  }\n\n  _createClass(HeavenlyInterface, [{\n    key: \"showReview\",\n    value: function showReview() {\n      console.log('Toggle Review');\n    }\n  }, {\n    key: \"showDefine\",\n    value: function showDefine() {\n      console.log('Toggle Form/Define');\n      this.setState(function (prevState) {\n        return {\n          formVisible: !prevState.formVisible\n        };\n      });\n    }\n  }, {\n    key: \"showFinalize\",\n    value: function showFinalize() {\n      console.log('Toggle Finalize');\n      this.setState(function (prevState) {\n        return {\n          finalizeVisible: !prevState.finalizeVisible\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state4 = this.state,\n          apiClient = _this$state4.apiClient,\n          variables = _this$state4.variables,\n          parameters = _this$state4.parameters,\n          executionResult = _this$state4.executionResult,\n          previewHTML = _this$state4.previewHTML,\n          loading = _this$state4.loading,\n          success = _this$state4.success,\n          ipfsLoading = _this$state4.ipfsLoading,\n          progress = _this$state4.progress,\n          progressMessage = _this$state4.progressMessage;\n      if (!executionResult) return __jsx(Loader, {\n        active: true\n      });\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"mainBackground\"\n      }, __jsx(BannerHeader, null), __jsx(Grid, {\n        stackable: true\n      }, __jsx(Grid.Row, null), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: 3\n      }), __jsx(Grid.Column, {\n        width: 10\n      }, __jsx(\"div\", {\n        className: \"contentPanel \"\n      }, __jsx(\"div\", {\n        className: \"ui segment contentHeader \"\n      }, __jsx(\"h1\", {\n        className: \"contentHeaderText playNormal\"\n      }, __jsx(\"b\", null, \"DEFINE\"))), __jsx(Container, {\n        textAlign: \"center\"\n      }, __jsx(OpenLawForm, {\n        style: {\n          width: '50%'\n        },\n        apiClient: apiClient,\n        executionResult: executionResult,\n        parameters: parameters,\n        onChangeFunction: this.onChange,\n        openLaw: Openlaw,\n        variables: variables\n      })))), __jsx(Grid.Column, {\n        width: 3\n      })), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: 3\n      }), __jsx(Grid.Column, {\n        width: 10\n      }, __jsx(\"div\", {\n        className: \"contentPanel minnish \"\n      }, __jsx(\"div\", {\n        className: \"ui segment contentHeader \"\n      }, __jsx(\"h1\", {\n        className: \"contentHeaderText playNormal\"\n      }, __jsx(\"b\", null, \"REVIEW\"))), this.state.showReview ? null : __jsx(Button, {\n        id: \"generateButton\",\n        className: \"huge pink ui right labeled icon button pillButton bottomMargin \",\n        onClick: this.setTemplatePreview\n      }, \"Generate Agreement\", __jsx(\"i\", {\n        className: \"play icon\"\n      })), __jsx(AgreementPreview, {\n        className: \"subPanel minnish\",\n        id: \"preview\",\n        previewHTML: previewHTML\n      }))), __jsx(Grid.Column, {\n        width: 3\n      })), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: 3\n      }), __jsx(Grid.Column, {\n        width: 10\n      }, __jsx(\"div\", {\n        className: \"contentPanel minnish \"\n      }, __jsx(\"div\", {\n        className: \"ui segment contentHeader \"\n      }, __jsx(\"h1\", {\n        className: \"ui playNormal contentHeaderText\"\n      }, __jsx(\"b\", null, \"FINALIZE\"))), __jsx(Card.Group, {\n        centered: true\n      }, __jsx(Card, {\n        className: \"customCard\"\n      }, __jsx(Card.Content, null, __jsx(Card.Header, null, \"MAYBE LATER?\"), __jsx(Card.Meta, null, \"Send Draft to Your Email\"), __jsx(Card.Description, null, __jsx(\"p\", null, \"You can forward the Draft to your lawyer or your co-founders. \"), __jsx(\"p\", null, \"You can convert the Draft into a Contract when you are ready to Form Entity.\"))), __jsx(Card.Content, {\n        extra: true\n      }, __jsx(\"div\", {\n        onClick: this.sendDraft,\n        className: \"ui one buttons\"\n      }, __jsx(Button, {\n        big: true,\n        color: \"blue\",\n        className: \"large pillButton draftButton\"\n      }, \"Save Draft\")))), __jsx(Card, {\n        className: \"customCard\"\n      }, __jsx(Card.Content, null, __jsx(Card.Header, null, \"Pay Fiat\"), __jsx(Card.Meta, null), __jsx(Card.Description, null)), __jsx(Card.Content, {\n        extra: true\n      }, __jsx(\"div\", {\n        className: \"ui one buttons\"\n      }, __jsx(Button, {\n        onClick: this.payFiat,\n        color: \"green\",\n        className: \"large pillButton\"\n      }, \"Pay Fiat\")))), __jsx(Card, {\n        className: \"customCard\"\n      }, __jsx(Card.Content, null, __jsx(Card.Header, null, \"Pay Crypto\"), __jsx(Card.Meta, null), __jsx(Card.Description, null)), __jsx(Card.Content, {\n        extra: true\n      }, __jsx(\"div\", {\n        className: \"ui one buttons\"\n      }, __jsx(Button, {\n        onClick: this.payCrypto,\n        color: \"purple\",\n        className: \"large pillButton\"\n      }, \"Pay Crypto\")))), __jsx(Card, {\n        className: \"customCard\"\n      }, __jsx(Card.Content, null, __jsx(Card.Header, null, \"LET'S DO IT\"), __jsx(Card.Meta, null, \"Issue Formation Agreement\"), __jsx(Card.Description, null, __jsx(\"p\", null, \"You will receive an e-mail requesting autorization for 'Etherize Entities' to Form Entity on your behalf. \"), __jsx(\"p\", null, \"No Payment is due until Entity's viability is Verified.\"))), __jsx(Card.Content, {\n        extra: true\n      }, __jsx(\"div\", {\n        className: \"ui one buttons\"\n      }, __jsx(Button, {\n        onClick: this.onSubmit,\n        color: \"pink\",\n        className: \"large pillButton\"\n      }, \"Pay Later\"))))), \")\")), __jsx(Grid.Column, {\n        width: 3\n      })))));\n    }\n  }]);\n\n  return HeavenlyInterface;\n}(React.Component);\n\nexport { HeavenlyInterface as default };","map":{"version":3,"sources":["/Users/iansp/Documents/blockchain/etherize/etherize/src/components/HeavenlyInterface.js"],"names":["React","APIClient","Openlaw","OpenLawForm","AgreementPreview","Grid","Button","Loader","Card","Container","BannerHeader","URL","OPENLAW_USER","OPENLAW_PASSWORD","HeavenlyInterface","openLawConfig","templateName","formVisible","reviewVisible","finalizeVisible","title","template","compiledTemplate","parameters","executionResult","variables","previewHTML","loading","ipfsLoading","success","progress","progressMessage","createRef","server","props","userName","password","apiClient","console","log","login","then","getTemplate","content","getTemplateVersions","versions","length","compileTemplate","isError","errorMessage","execute","error","getExecutedVariables","setState","key","value","state","includes","email","getAgreements","agreements","renderForReview","agreement","document","getElementById","scrollIntoView","behavior","showReview","object","templateId","id","text","creator","overriddenParagraphs","draftId","accounts","contract","web3","token","OPENLAW_JWT","headers","openlaw_jwt","buildOpenLawParamsObj","uploadParams","uploadDraft","contractId","sendDraft","alert","uploadContract","sendContract","prevState","width","onChange","setTemplatePreview","payFiat","payCrypto","onSubmit","Component"],"mappings":"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","sourcesContent":["import React, { } from 'react';\n// import { Link } from 'react-router-dom';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import openlaw\nimport { APIClient, Openlaw } from \"openlaw\";\nimport OpenLawForm from \"openlaw-elements\";\nimport AgreementPreview from \"../components/AgreementPreview\";\n// import SelectionPanel from \"../components/SelectionPanel\";\n// import SubPanel from \"../components/SubPanel\";\nimport \"openlaw-elements/dist/openlaw-elements.min.css\";\nimport \"./HeavenlyInterface.css\";\n// importing UI components\nimport { Grid, Button, Loader, Card, Container  } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport BannerHeader from \"./BannerHeader\";\n// configure openlaw\nconst URL = \"https://etherizeit.openlaw.io\";\n// You can change TEMPLATE_NAME to 'articles-of-organization' to make the code work ...\n// Right now, both deal templates on Etherizeit instance are causing the same issue\nconst OPENLAW_USER = 'etherize@protonmail.com';\nconst OPENLAW_PASSWORD = 'useresponsibly'\n\nexport default class HeavenlyInterface extends React.Component {\n\n  state = {\n   // Variables for OpenLaw API\n   openLawConfig: null,\n   templateName: null,\n\n   //Variables for the UI\n   formVisible: true,\n   reviewVisible: false,\n   finalizeVisible: false,\n\n   // State variables for OpenLaw\n   title: \"\",\n   template: \"\",\n   compiledTemplate: null,\n   parameters: {},\n   executionResult: null,\n   variables: null,\n   // State variables for preview component\n   previewHTML: null,\n   loading: false,\n   ipfsLoading: false,\n   success: false,\n   progress: 0,\n   progressMessage: \"\"\n };\n\n fileInputRef = React.createRef();\n componentDidMount = async () => {\n\n\n   //create config\n   const openLawConfig = {\n     server: URL,\n     templateName: this.props.templateName,\n     userName: OPENLAW_USER,\n     password: OPENLAW_PASSWORD\n   };\n\n   const apiClient = new APIClient(openLawConfig.server);\n   console.log(openLawConfig.userName);\n   //const { web3, accounts, contract } = this.props;\n   //create an instance of the API client with url as parameter\n   apiClient\n     .login(openLawConfig.userName, openLawConfig.password)\n     .then(console.log);\n\n   //Retrieve your OpenLaw template by name, use async/await\n   const template = await apiClient.getTemplate(openLawConfig.templateName);\n   console.log(template);\n\n\n\n   //Retreive the OpenLaw Template, including MarkDown\n   const content = template.content;\n   console.log(\"template..\", template);\n\n   //Get the most recent version of the OpenLaw API Tutorial Template\n   const versions = await apiClient.getTemplateVersions(\n     openLawConfig.templateName,\n     20,\n     1\n   );\n   console.log(\"versions..\", versions[0], versions.length);\n\n   const title = template.title;\n\n\n\n   //Get my compiled Template, for use in rendering the HTML in previewTemplate\n   const compiledTemplate = await Openlaw.compileTemplate(content);\n   if (compiledTemplate.isError) {\n     throw \"template error\" + compiledTemplate.errorMessage;\n   }\n   console.log(\"my compiled template..\", compiledTemplate);\n\n\n\n   const parameters = {\n     \"Organizer Signature\": '{\"email\":\"etherize@protonmail.com\"}',\n   };\n   const { executionResult, errorMessage } = await Openlaw.execute(\n     compiledTemplate.compiledTemplate,\n     {},\n     parameters\n   );\n\n   console.log(\"execution result:\", executionResult);\n\n   // ** This is helpful for logging in development, or throwing exceptions at runtime.\n   if (errorMessage) {\n     console.error(\"Openlaw Execution Error:\", errorMessage);\n   }\n\n   const variables = await Openlaw.getExecutedVariables(executionResult, {});\n   console.log(\"variables:\", variables);\n\n   this.setState({\n     openLawConfig,\n     apiClient,\n     title,\n     template,\n     compiledTemplate,\n     parameters,\n     executionResult,\n     variables\n   });\n };\n\n showReview() {\n     console.log('Toggle Review');\n   };\n\n showDefine() {\n     console.log('Toggle Form/Define');\n     this.setState(prevState => ({ formVisible: !prevState.formVisible }));\n   };\n\n showFinalize() {\n     console.log('Toggle Finalize');\n     this.setState(prevState => ({ finalizeVisible: !prevState.finalizeVisible }));\n   };\n\n\n\n onChange = (key, value) => {\n   const { compiledTemplate } = this.state;\n   const parameters = key\n     ? {\n         ...this.state.parameters,\n         [key]: [key].includes(\"Email\")\n           ? JSON.stringify({ email: value })\n           : value\n       }\n     : this.state.parameters;\n\n   const { executionResult, errorMessage } = Openlaw.execute(\n     compiledTemplate.compiledTemplate,\n     {},\n     parameters\n   );\n   const variables = Openlaw.getExecutedVariables(executionResult, {});\n     this.setState({ parameters, variables, executionResult });\n };\n\n setTemplatePreview = async () => {\n   const { parameters, compiledTemplate } = this.state;\n   console.log(parameters);\n\n   const executionResult = await Openlaw.execute(\n     compiledTemplate.compiledTemplate,\n     {},\n     parameters\n   );\n   const agreements = await Openlaw.getAgreements(\n     executionResult.executionResult\n   );\n   const previewHTML = await Openlaw.renderForReview(\n     agreements[0].agreement,\n     {}\n   );\n   await this.setState({ previewHTML });\n   document.getElementById(\"preview\").scrollIntoView({\n     behavior: \"smooth\"\n   });\n    this.setState({ showReview: true });\n };\n\n\n buildOpenLawParamsObj = async template => {\n\n\n   const { parameters } = this.state;\n   const object = {\n     templateId: template.id,\n     title: template.title,\n     text: template.content,\n     creator: \"Etherize\",\n     parameters,\n     overriddenParagraphs: {},\n     agreements: {},\n     draftId: \"\"\n   };\n   return object;\n };\n\n sendDraft = async () => {\n   const { openLawConfig, apiClient, progress, progressMessage } = this.state;\n   //login to api\n   this.setState(\n     {\n       loading: true,\n       progress: 20,\n       progressMessage: \"Uploading to OpenLaw...\"\n     },\n     async () => {\n       try {\n         const { accounts, contract, web3 } = this.props;\n         const token = await apiClient.login(\n           openLawConfig.userName,\n           openLawConfig.password\n         );\n\n\n         const OPENLAW_JWT = token.headers.openlaw_jwt;\n\n         //add Open Law params to be uploaded\n         const uploadParams = await this.buildOpenLawParamsObj(\n           this.state.template\n         );\n         console.log(\"parmeters from user..\", uploadParams.parameters);\n         const contractId = await apiClient.uploadDraft(uploadParams);\n         console.log(\"Contract ID: \", contractId);\n         await apiClient.sendDraft([], [], contractId);\n\n         alert(\"Success! You should receive your Draft via e-mail.\");\n\n         } catch (error) {\n           alert(error + \". Did you specify an e-mail address in the 'Define' section?\")\n           await this.setState({\n           progressMessage: \"Uh oh, we've run into an error...\"\n         });\n         console.log(error);\n\n       }\n     }\n   );\n };\n\n sendContract = async () => {\n   alert(\"Not yet enabled. Waiting for OpenLaw to fix their Deal feature, to issue multiple Contracts at once. \")\n };\n\n\n payFiat = async () => {\n    alert(\"Pay Fiat is not yet enabled.\")\n }\n\n\n payCrypto = async () => {\n   alert(\"Pay Crypto is not yet enabled.\")\n }\n\n\n onSubmit = async () => {\n   const { openLawConfig, apiClient, progress, progressMessage } = this.state;\n   //login to api\n   this.setState(\n     {\n       loading: true,\n       progress: 20,\n       progressMessage: \"Uploading to OpenLaw...\"\n     },\n     async () => {\n       try {\n         const { accounts, contract, web3 } = this.props;\n         const token = await apiClient.login(\n           openLawConfig.userName,\n           openLawConfig.password\n         );\n\n         const OPENLAW_JWT = token.headers.openlaw_jwt;\n\n         //add Open Law params to be uploaded\n         const uploadParams = await this.buildOpenLawParamsObj(\n           this.state.template\n\n         );\n         console.log(\"parmeters from user..\", uploadParams.parameters);\n         const contractId = await apiClient.uploadContract(uploadParams);\n         console.log(\"Contract ID: \", contractId);\n         await apiClient.sendContract([\"ineptitude@gmail.com\"], [\"ineptitude@gmail.com\"], contractId);\n         alert(\"Success! You should receive a request to sign the Agreement via e-mail.\");\n         } catch (error) {\n           alert(\"Fail: \" + error)\n           await this.setState({\n           progressMessage: \"Uh oh, we've run into an error...\"\n         });\n         console.log(error);\n       }\n     }\n   );\n };\n\n\n\n  render () {\n    const {\n      apiClient,\n      variables,\n      parameters,\n      executionResult,\n      previewHTML,\n      loading,\n      success,\n      ipfsLoading,\n      progress,\n      progressMessage\n    } = this.state;\n    if (!executionResult) return <Loader active />;\n    return (\n      <>\n          <div className={\"mainBackground\"}>\n              <BannerHeader/>\n        <Grid stackable={true}>\n          <Grid.Row>\n\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={3}>\n\n            </Grid.Column>\n            <Grid.Column  width={10}>\n              <div    className=\"contentPanel \">\n                <div className=\"ui segment contentHeader \">\n                  <h1 className=\"contentHeaderText playNormal\"><b>DEFINE</b></h1>\n                </div>\n\n                <Container textAlign='center'>\n                       <OpenLawForm  style={{width: '50%'}}\n                                   apiClient={apiClient}\n                                   executionResult={executionResult}\n                                   parameters={parameters}\n                                   onChangeFunction={this.onChange}\n                                   openLaw={Openlaw}\n                                   variables={variables}\n                                 /></Container>\n              </div>\n            </Grid.Column>\n            <Grid.Column width={3}>\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column width={3}>\n            </Grid.Column>\n            <Grid.Column width={10}>\n\n\n            <div className=\"contentPanel minnish \">\n              <div className=\"ui segment contentHeader \">\n                <h1 className=\"contentHeaderText playNormal\"><b>REVIEW</b></h1>\n              </div>\n\n               { this.state.showReview ? null\n                 :\n                 <Button id=\"generateButton\" className=\"huge pink ui right labeled icon button pillButton bottomMargin \" onClick={this.setTemplatePreview}>Generate Agreement<i className=\"play icon\"></i></Button>\n               }\n\n\n\n               <AgreementPreview  className=\"subPanel minnish\" id=\"preview\" previewHTML={previewHTML} />\n            </div>\n\n\n            </Grid.Column>\n            <Grid.Column width={3}>\n\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={3}>\n            </Grid.Column>\n            <Grid.Column width={10}>\n            <div className=\"contentPanel minnish \">\n\n            <div   className=\"ui segment contentHeader \">\n              <h1 className=\"ui playNormal contentHeaderText\"><b>FINALIZE</b></h1>\n            </div>\n\n            <Card.Group centered>\n  <Card className=\"customCard\">\n    <Card.Content>\n\n      <Card.Header>MAYBE LATER?</Card.Header>\n      <Card.Meta>Send Draft to Your Email</Card.Meta>\n      <Card.Description>\n         <p>You can forward the Draft to your lawyer or your co-founders. </p><p>You can convert the Draft into a Contract when you are ready to Form Entity.</p>\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <div  onClick={this.sendDraft} className='ui one buttons'>\n        <Button big color='blue' className='large pillButton draftButton'>\n          Save Draft\n        </Button>\n      </div>\n    </Card.Content>\n  </Card>\n\n  <Card className=\"customCard\">\n    <Card.Content>\n\n      <Card.Header>Pay Fiat</Card.Header>\n      <Card.Meta></Card.Meta>\n      <Card.Description>\n\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <div className='ui one buttons'>\n        <Button   onClick={this.payFiat} color='green' className='large pillButton'>\n          Pay Fiat\n        </Button>\n      </div>\n    </Card.Content>\n  </Card>\n\n  <Card className=\"customCard\">\n    <Card.Content>\n\n      <Card.Header>Pay Crypto</Card.Header>\n      <Card.Meta></Card.Meta>\n      <Card.Description>\n\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <div className='ui one buttons'>\n        <Button   onClick={this.payCrypto} color='purple' className='large pillButton'>\n          Pay Crypto\n        </Button>\n      </div>\n    </Card.Content>\n  </Card>\n\n\n  <Card className=\"customCard\">\n    <Card.Content>\n\n      <Card.Header>LET'S DO IT</Card.Header>\n      <Card.Meta>Issue Formation Agreement</Card.Meta>\n      <Card.Description>\n        <p>You will receive an e-mail requesting autorization for 'Etherize Entities' to Form Entity on your behalf. </p>\n        <p>No Payment is due until Entity's viability is Verified.</p>\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <div className='ui one buttons'>\n        <Button   onClick={this.onSubmit} color='pink' className='large pillButton'>\n          Pay Later\n        </Button>\n      </div>\n    </Card.Content>\n  </Card>\n\n</Card.Group>\n)\n\n\n\n\n             </div>\n            </Grid.Column>\n            <Grid.Column width={3}>\n\n            </Grid.Column>\n          </Grid.Row>\n\n        </Grid>\n          </div>\n      </>\n    );\n\n\n\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}