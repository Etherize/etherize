{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react'; // import { Link } from 'react-router-dom';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import openlaw\n\nimport { APIClient, Openlaw } from \"openlaw\";\nimport OpenLawForm from \"openlaw-elements\";\nimport AgreementPreview from \"../components/AgreementPreview\"; // import SelectionPanel from \"../components/SelectionPanel\";\n// import SubPanel from \"../components/SubPanel\";\n\nimport \"openlaw-elements/dist/openlaw-elements.min.css\";\nimport \"./HeavenlyInterface.css\"; // importing UI components\n\nimport { Grid, Button, Loader, Card, Container } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport BannerHeader from \"./BannerHeader\"; // configure openlaw\n\nconst URL = \"https://etherizeit.openlaw.io\"; // You can change TEMPLATE_NAME to 'articles-of-organization' to make the code work ...\n// Right now, both deal templates on Etherizeit instance are causing the same issue\n\nconst OPENLAW_USER = 'etherize@protonmail.com';\nconst OPENLAW_PASSWORD = 'useresponsibly';\nexport default class HeavenlyInterface extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      // Variables for OpenLaw API\n      openLawConfig: null,\n      templateName: null,\n      //Variables for the UI\n      formVisible: true,\n      reviewVisible: false,\n      finalizeVisible: false,\n      // State variables for OpenLaw\n      title: \"\",\n      template: \"\",\n      compiledTemplate: null,\n      parameters: {},\n      executionResult: null,\n      variables: null,\n      // State variables for preview component\n      previewHTML: null,\n      loading: false,\n      ipfsLoading: false,\n      success: false,\n      progress: 0,\n      progressMessage: \"\"\n    });\n\n    _defineProperty(this, \"fileInputRef\", React.createRef());\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      //create config\n      const openLawConfig = {\n        server: URL,\n        templateName: this.props.templateName,\n        userName: OPENLAW_USER,\n        password: OPENLAW_PASSWORD\n      };\n      const apiClient = new APIClient(openLawConfig.server);\n      console.log(openLawConfig.userName); //const { web3, accounts, contract } = this.props;\n      //create an instance of the API client with url as parameter\n\n      apiClient.login(openLawConfig.userName, openLawConfig.password).then(console.log); //Retrieve your OpenLaw template by name, use async/await\n\n      const template = await apiClient.getTemplate(openLawConfig.templateName);\n      console.log(template); //Retreive the OpenLaw Template, including MarkDown\n\n      const content = template.content;\n      console.log(\"template..\", template); //Get the most recent version of the OpenLaw API Tutorial Template\n\n      const versions = await apiClient.getTemplateVersions(openLawConfig.templateName, 20, 1);\n      console.log(\"versions..\", versions[0], versions.length);\n      const title = template.title; //Get my compiled Template, for use in rendering the HTML in previewTemplate\n\n      const compiledTemplate = await Openlaw.compileTemplate(content);\n\n      if (compiledTemplate.isError) {\n        throw \"template error\" + compiledTemplate.errorMessage;\n      }\n\n      console.log(\"my compiled template..\", compiledTemplate);\n      const parameters = {\n        \"Organizer Signature\": '{\"email\":\"etherize@protonmail.com\"}'\n      };\n      const {\n        executionResult,\n        errorMessage\n      } = await Openlaw.execute(compiledTemplate.compiledTemplate, {}, parameters);\n      console.log(\"execution result:\", executionResult); // ** This is helpful for logging in development, or throwing exceptions at runtime.\n\n      if (errorMessage) {\n        console.error(\"Openlaw Execution Error:\", errorMessage);\n      }\n\n      const variables = await Openlaw.getExecutedVariables(executionResult, {});\n      console.log(\"variables:\", variables);\n      this.setState({\n        openLawConfig,\n        apiClient,\n        title,\n        template,\n        compiledTemplate,\n        parameters,\n        executionResult,\n        variables\n      });\n    });\n\n    _defineProperty(this, \"onChange\", (key, value) => {\n      const {\n        compiledTemplate\n      } = this.state;\n      const parameters = key ? _objectSpread({}, this.state.parameters, {\n        [key]: [key].includes(\"Email\") ? _JSON$stringify({\n          email: value\n        }) : value\n      }) : this.state.parameters;\n      const {\n        executionResult,\n        errorMessage\n      } = Openlaw.execute(compiledTemplate.compiledTemplate, {}, parameters);\n      const variables = Openlaw.getExecutedVariables(executionResult, {});\n      this.setState({\n        parameters,\n        variables,\n        executionResult\n      });\n    });\n\n    _defineProperty(this, \"setTemplatePreview\", async () => {\n      const {\n        parameters,\n        compiledTemplate\n      } = this.state;\n      console.log(parameters);\n      const executionResult = await Openlaw.execute(compiledTemplate.compiledTemplate, {}, parameters);\n      const agreements = await Openlaw.getAgreements(executionResult.executionResult);\n      const previewHTML = await Openlaw.renderForReview(agreements[0].agreement, {});\n      await this.setState({\n        previewHTML\n      });\n      document.getElementById(\"preview\").scrollIntoView({\n        behavior: \"smooth\"\n      });\n      this.setState({\n        showReview: true\n      });\n    });\n\n    _defineProperty(this, \"buildOpenLawParamsObj\", async template => {\n      const {\n        parameters\n      } = this.state;\n      const object = {\n        templateId: template.id,\n        title: template.title,\n        text: template.content,\n        creator: \"Etherize\",\n        parameters,\n        overriddenParagraphs: {},\n        agreements: {},\n        draftId: \"\"\n      };\n      return object;\n    });\n\n    _defineProperty(this, \"sendDraft\", async () => {\n      const {\n        openLawConfig,\n        apiClient,\n        progress,\n        progressMessage\n      } = this.state; //login to api\n\n      this.setState({\n        loading: true,\n        progress: 20,\n        progressMessage: \"Uploading to OpenLaw...\"\n      }, async () => {\n        try {\n          const {\n            accounts,\n            contract,\n            web3\n          } = this.props;\n          const token = await apiClient.login(openLawConfig.userName, openLawConfig.password);\n          const OPENLAW_JWT = token.headers.openlaw_jwt; //add Open Law params to be uploaded\n\n          const uploadParams = await this.buildOpenLawParamsObj(this.state.template);\n          console.log(\"parmeters from user..\", uploadParams.parameters);\n          const contractId = await apiClient.uploadDraft(uploadParams);\n          console.log(\"Contract ID: \", contractId);\n          await apiClient.sendDraft([], [], contractId);\n          alert(\"Success! You should receive your Draft via e-mail.\");\n        } catch (error) {\n          alert(error + \". Did you specify an e-mail address in the 'Define' section?\");\n          await this.setState({\n            progressMessage: \"Uh oh, we've run into an error...\"\n          });\n          console.log(error);\n        }\n      });\n    });\n\n    _defineProperty(this, \"sendContract\", async () => {\n      alert(\"Not yet enabled. Waiting for OpenLaw to fix their Deal feature, to issue multiple Contracts at once. \");\n    });\n\n    _defineProperty(this, \"payFiat\", async () => {\n      alert(\"Pay Fiat is not yet enabled.\");\n    });\n\n    _defineProperty(this, \"payCrypto\", async () => {\n      alert(\"Pay Crypto is not yet enabled.\");\n    });\n\n    _defineProperty(this, \"onSubmit\", async () => {\n      const {\n        openLawConfig,\n        apiClient,\n        progress,\n        progressMessage\n      } = this.state; //login to api\n\n      this.setState({\n        loading: true,\n        progress: 20,\n        progressMessage: \"Uploading to OpenLaw...\"\n      }, async () => {\n        try {\n          const {\n            accounts,\n            contract,\n            web3\n          } = this.props;\n          const token = await apiClient.login(openLawConfig.userName, openLawConfig.password);\n          const OPENLAW_JWT = token.headers.openlaw_jwt; //add Open Law params to be uploaded\n\n          const uploadParams = await this.buildOpenLawParamsObj(this.state.template);\n          console.log(\"parmeters from user..\", uploadParams.parameters);\n          const contractId = await apiClient.uploadContract(uploadParams);\n          console.log(\"Contract ID: \", contractId);\n          await apiClient.sendContract([\"ineptitude@gmail.com\"], [\"ineptitude@gmail.com\"], contractId);\n          alert(\"Success! You should receive a request to sign the Agreement via e-mail.\");\n        } catch (error) {\n          alert(\"Fail: \" + error);\n          await this.setState({\n            progressMessage: \"Uh oh, we've run into an error...\"\n          });\n          console.log(error);\n        }\n      });\n    });\n  }\n\n  showReview() {\n    console.log('Toggle Review');\n  }\n\n  showDefine() {\n    console.log('Toggle Form/Define');\n    this.setState(prevState => ({\n      formVisible: !prevState.formVisible\n    }));\n  }\n\n  showFinalize() {\n    console.log('Toggle Finalize');\n    this.setState(prevState => ({\n      finalizeVisible: !prevState.finalizeVisible\n    }));\n  }\n\n  render() {\n    const {\n      apiClient,\n      variables,\n      parameters,\n      executionResult,\n      previewHTML,\n      loading,\n      success,\n      ipfsLoading,\n      progress,\n      progressMessage\n    } = this.state;\n    if (!executionResult) return __jsx(Loader, {\n      active: true\n    });\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"mainBackground\"\n    }, __jsx(BannerHeader, null), __jsx(Grid, {\n      stackable: true\n    }, __jsx(Grid.Row, null), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 3\n    }), __jsx(Grid.Column, {\n      width: 10\n    }, __jsx(\"div\", {\n      className: \"contentPanel \"\n    }, __jsx(\"div\", {\n      className: \"ui segment contentHeader \"\n    }, __jsx(\"h1\", {\n      className: \"contentHeaderText playNormal\"\n    }, __jsx(\"b\", null, \"DEFINE\"))), __jsx(Container, {\n      textAlign: \"center\"\n    }, __jsx(OpenLawForm, {\n      style: {\n        width: '50%'\n      },\n      apiClient: apiClient,\n      executionResult: executionResult,\n      parameters: parameters,\n      onChangeFunction: this.onChange,\n      openLaw: Openlaw,\n      variables: variables\n    })))), __jsx(Grid.Column, {\n      width: 3\n    })), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 3\n    }), __jsx(Grid.Column, {\n      width: 10\n    }, __jsx(\"div\", {\n      className: \"contentPanel minnish \"\n    }, __jsx(\"div\", {\n      className: \"ui segment contentHeader \"\n    }, __jsx(\"h1\", {\n      className: \"contentHeaderText playNormal\"\n    }, __jsx(\"b\", null, \"REVIEW\"))), this.state.showReview ? null : __jsx(Button, {\n      id: \"generateButton\",\n      className: \"huge pink ui right labeled icon button pillButton bottomMargin \",\n      onClick: this.setTemplatePreview\n    }, \"Generate Agreement\", __jsx(\"i\", {\n      className: \"play icon\"\n    })), __jsx(AgreementPreview, {\n      className: \"subPanel minnish\",\n      id: \"preview\",\n      previewHTML: previewHTML\n    }))), __jsx(Grid.Column, {\n      width: 3\n    })), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 3\n    }), __jsx(Grid.Column, {\n      width: 10\n    }, __jsx(\"div\", {\n      className: \"contentPanel minnish \"\n    }, __jsx(\"div\", {\n      className: \"ui segment contentHeader \"\n    }, __jsx(\"h1\", {\n      className: \"ui playNormal contentHeaderText\"\n    }, __jsx(\"b\", null, \"FINALIZE\"))), __jsx(Card.Group, {\n      centered: true\n    }, __jsx(Card, {\n      className: \"customCard\"\n    }, __jsx(Card.Content, null, __jsx(Card.Header, null, \"MAYBE LATER?\"), __jsx(Card.Meta, null, \"Send Draft to Your Email\"), __jsx(Card.Description, null, __jsx(\"p\", null, \"You can forward the Draft to your lawyer or your co-founders. \"), __jsx(\"p\", null, \"You can convert the Draft into a Contract when you are ready to Form Entity.\"))), __jsx(Card.Content, {\n      extra: true\n    }, __jsx(\"div\", {\n      onClick: this.sendDraft,\n      className: \"ui one buttons\"\n    }, __jsx(Button, {\n      big: true,\n      color: \"blue\",\n      className: \"large pillButton draftButton\"\n    }, \"Save Draft\")))), __jsx(Card, {\n      className: \"customCard\"\n    }, __jsx(Card.Content, null, __jsx(Card.Header, null, \"Pay Fiat\"), __jsx(Card.Meta, null), __jsx(Card.Description, null)), __jsx(Card.Content, {\n      extra: true\n    }, __jsx(\"div\", {\n      className: \"ui one buttons\"\n    }, __jsx(Button, {\n      onClick: this.payFiat,\n      color: \"green\",\n      className: \"large pillButton\"\n    }, \"Pay Fiat\")))), __jsx(Card, {\n      className: \"customCard\"\n    }, __jsx(Card.Content, null, __jsx(Card.Header, null, \"Pay Crypto\"), __jsx(Card.Meta, null), __jsx(Card.Description, null)), __jsx(Card.Content, {\n      extra: true\n    }, __jsx(\"div\", {\n      className: \"ui one buttons\"\n    }, __jsx(Button, {\n      onClick: this.payCrypto,\n      color: \"purple\",\n      className: \"large pillButton\"\n    }, \"Pay Crypto\")))), __jsx(Card, {\n      className: \"customCard\"\n    }, __jsx(Card.Content, null, __jsx(Card.Header, null, \"LET'S DO IT\"), __jsx(Card.Meta, null, \"Issue Formation Agreement\"), __jsx(Card.Description, null, __jsx(\"p\", null, \"You will receive an e-mail requesting autorization for 'Etherize Entities' to Form Entity on your behalf. \"), __jsx(\"p\", null, \"No Payment is due until Entity's viability is Verified.\"))), __jsx(Card.Content, {\n      extra: true\n    }, __jsx(\"div\", {\n      className: \"ui one buttons\"\n    }, __jsx(Button, {\n      onClick: this.onSubmit,\n      color: \"pink\",\n      className: \"large pillButton\"\n    }, \"Pay Later\"))))), \")\")), __jsx(Grid.Column, {\n      width: 3\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/iansp/Documents/blockchain/etherize/etherize/src/components/HeavenlyInterface.js"],"names":["React","APIClient","Openlaw","OpenLawForm","AgreementPreview","Grid","Button","Loader","Card","Container","BannerHeader","URL","OPENLAW_USER","OPENLAW_PASSWORD","HeavenlyInterface","Component","openLawConfig","templateName","formVisible","reviewVisible","finalizeVisible","title","template","compiledTemplate","parameters","executionResult","variables","previewHTML","loading","ipfsLoading","success","progress","progressMessage","createRef","server","props","userName","password","apiClient","console","log","login","then","getTemplate","content","versions","getTemplateVersions","length","compileTemplate","isError","errorMessage","execute","error","getExecutedVariables","setState","key","value","state","includes","email","agreements","getAgreements","renderForReview","agreement","document","getElementById","scrollIntoView","behavior","showReview","object","templateId","id","text","creator","overriddenParagraphs","draftId","accounts","contract","web3","token","OPENLAW_JWT","headers","openlaw_jwt","uploadParams","buildOpenLawParamsObj","contractId","uploadDraft","sendDraft","alert","uploadContract","sendContract","showDefine","prevState","showFinalize","render","width","onChange","setTemplatePreview","payFiat","payCrypto","onSubmit"],"mappings":"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","sourcesContent":["import React, { } from 'react';\n// import { Link } from 'react-router-dom';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import openlaw\nimport { APIClient, Openlaw } from \"openlaw\";\nimport OpenLawForm from \"openlaw-elements\";\nimport AgreementPreview from \"../components/AgreementPreview\";\n// import SelectionPanel from \"../components/SelectionPanel\";\n// import SubPanel from \"../components/SubPanel\";\nimport \"openlaw-elements/dist/openlaw-elements.min.css\";\nimport \"./HeavenlyInterface.css\";\n// importing UI components\nimport { Grid, Button, Loader, Card, Container  } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport BannerHeader from \"./BannerHeader\";\n// configure openlaw\nconst URL = \"https://etherizeit.openlaw.io\";\n// You can change TEMPLATE_NAME to 'articles-of-organization' to make the code work ...\n// Right now, both deal templates on Etherizeit instance are causing the same issue\nconst OPENLAW_USER = 'etherize@protonmail.com';\nconst OPENLAW_PASSWORD = 'useresponsibly'\n\nexport default class HeavenlyInterface extends React.Component {\n\n  state = {\n   // Variables for OpenLaw API\n   openLawConfig: null,\n   templateName: null,\n\n   //Variables for the UI\n   formVisible: true,\n   reviewVisible: false,\n   finalizeVisible: false,\n\n   // State variables for OpenLaw\n   title: \"\",\n   template: \"\",\n   compiledTemplate: null,\n   parameters: {},\n   executionResult: null,\n   variables: null,\n   // State variables for preview component\n   previewHTML: null,\n   loading: false,\n   ipfsLoading: false,\n   success: false,\n   progress: 0,\n   progressMessage: \"\"\n };\n\n fileInputRef = React.createRef();\n componentDidMount = async () => {\n\n\n   //create config\n   const openLawConfig = {\n     server: URL,\n     templateName: this.props.templateName,\n     userName: OPENLAW_USER,\n     password: OPENLAW_PASSWORD\n   };\n\n   const apiClient = new APIClient(openLawConfig.server);\n   console.log(openLawConfig.userName);\n   //const { web3, accounts, contract } = this.props;\n   //create an instance of the API client with url as parameter\n   apiClient\n     .login(openLawConfig.userName, openLawConfig.password)\n     .then(console.log);\n\n   //Retrieve your OpenLaw template by name, use async/await\n   const template = await apiClient.getTemplate(openLawConfig.templateName);\n   console.log(template);\n\n\n\n   //Retreive the OpenLaw Template, including MarkDown\n   const content = template.content;\n   console.log(\"template..\", template);\n\n   //Get the most recent version of the OpenLaw API Tutorial Template\n   const versions = await apiClient.getTemplateVersions(\n     openLawConfig.templateName,\n     20,\n     1\n   );\n   console.log(\"versions..\", versions[0], versions.length);\n\n   const title = template.title;\n\n\n\n   //Get my compiled Template, for use in rendering the HTML in previewTemplate\n   const compiledTemplate = await Openlaw.compileTemplate(content);\n   if (compiledTemplate.isError) {\n     throw \"template error\" + compiledTemplate.errorMessage;\n   }\n   console.log(\"my compiled template..\", compiledTemplate);\n\n\n\n   const parameters = {\n     \"Organizer Signature\": '{\"email\":\"etherize@protonmail.com\"}',\n   };\n   const { executionResult, errorMessage } = await Openlaw.execute(\n     compiledTemplate.compiledTemplate,\n     {},\n     parameters\n   );\n\n   console.log(\"execution result:\", executionResult);\n\n   // ** This is helpful for logging in development, or throwing exceptions at runtime.\n   if (errorMessage) {\n     console.error(\"Openlaw Execution Error:\", errorMessage);\n   }\n\n   const variables = await Openlaw.getExecutedVariables(executionResult, {});\n   console.log(\"variables:\", variables);\n\n   this.setState({\n     openLawConfig,\n     apiClient,\n     title,\n     template,\n     compiledTemplate,\n     parameters,\n     executionResult,\n     variables\n   });\n };\n\n showReview() {\n     console.log('Toggle Review');\n   };\n\n showDefine() {\n     console.log('Toggle Form/Define');\n     this.setState(prevState => ({ formVisible: !prevState.formVisible }));\n   };\n\n showFinalize() {\n     console.log('Toggle Finalize');\n     this.setState(prevState => ({ finalizeVisible: !prevState.finalizeVisible }));\n   };\n\n\n\n onChange = (key, value) => {\n   const { compiledTemplate } = this.state;\n   const parameters = key\n     ? {\n         ...this.state.parameters,\n         [key]: [key].includes(\"Email\")\n           ? JSON.stringify({ email: value })\n           : value\n       }\n     : this.state.parameters;\n\n   const { executionResult, errorMessage } = Openlaw.execute(\n     compiledTemplate.compiledTemplate,\n     {},\n     parameters\n   );\n   const variables = Openlaw.getExecutedVariables(executionResult, {});\n     this.setState({ parameters, variables, executionResult });\n };\n\n setTemplatePreview = async () => {\n   const { parameters, compiledTemplate } = this.state;\n   console.log(parameters);\n\n   const executionResult = await Openlaw.execute(\n     compiledTemplate.compiledTemplate,\n     {},\n     parameters\n   );\n   const agreements = await Openlaw.getAgreements(\n     executionResult.executionResult\n   );\n   const previewHTML = await Openlaw.renderForReview(\n     agreements[0].agreement,\n     {}\n   );\n   await this.setState({ previewHTML });\n   document.getElementById(\"preview\").scrollIntoView({\n     behavior: \"smooth\"\n   });\n    this.setState({ showReview: true });\n };\n\n\n buildOpenLawParamsObj = async template => {\n\n\n   const { parameters } = this.state;\n   const object = {\n     templateId: template.id,\n     title: template.title,\n     text: template.content,\n     creator: \"Etherize\",\n     parameters,\n     overriddenParagraphs: {},\n     agreements: {},\n     draftId: \"\"\n   };\n   return object;\n };\n\n sendDraft = async () => {\n   const { openLawConfig, apiClient, progress, progressMessage } = this.state;\n   //login to api\n   this.setState(\n     {\n       loading: true,\n       progress: 20,\n       progressMessage: \"Uploading to OpenLaw...\"\n     },\n     async () => {\n       try {\n         const { accounts, contract, web3 } = this.props;\n         const token = await apiClient.login(\n           openLawConfig.userName,\n           openLawConfig.password\n         );\n\n\n         const OPENLAW_JWT = token.headers.openlaw_jwt;\n\n         //add Open Law params to be uploaded\n         const uploadParams = await this.buildOpenLawParamsObj(\n           this.state.template\n         );\n         console.log(\"parmeters from user..\", uploadParams.parameters);\n         const contractId = await apiClient.uploadDraft(uploadParams);\n         console.log(\"Contract ID: \", contractId);\n         await apiClient.sendDraft([], [], contractId);\n\n         alert(\"Success! You should receive your Draft via e-mail.\");\n\n         } catch (error) {\n           alert(error + \". Did you specify an e-mail address in the 'Define' section?\")\n           await this.setState({\n           progressMessage: \"Uh oh, we've run into an error...\"\n         });\n         console.log(error);\n\n       }\n     }\n   );\n };\n\n sendContract = async () => {\n   alert(\"Not yet enabled. Waiting for OpenLaw to fix their Deal feature, to issue multiple Contracts at once. \")\n };\n\n\n payFiat = async () => {\n    alert(\"Pay Fiat is not yet enabled.\")\n }\n\n\n payCrypto = async () => {\n   alert(\"Pay Crypto is not yet enabled.\")\n }\n\n\n onSubmit = async () => {\n   const { openLawConfig, apiClient, progress, progressMessage } = this.state;\n   //login to api\n   this.setState(\n     {\n       loading: true,\n       progress: 20,\n       progressMessage: \"Uploading to OpenLaw...\"\n     },\n     async () => {\n       try {\n         const { accounts, contract, web3 } = this.props;\n         const token = await apiClient.login(\n           openLawConfig.userName,\n           openLawConfig.password\n         );\n\n         const OPENLAW_JWT = token.headers.openlaw_jwt;\n\n         //add Open Law params to be uploaded\n         const uploadParams = await this.buildOpenLawParamsObj(\n           this.state.template\n\n         );\n         console.log(\"parmeters from user..\", uploadParams.parameters);\n         const contractId = await apiClient.uploadContract(uploadParams);\n         console.log(\"Contract ID: \", contractId);\n         await apiClient.sendContract([\"ineptitude@gmail.com\"], [\"ineptitude@gmail.com\"], contractId);\n         alert(\"Success! You should receive a request to sign the Agreement via e-mail.\");\n         } catch (error) {\n           alert(\"Fail: \" + error)\n           await this.setState({\n           progressMessage: \"Uh oh, we've run into an error...\"\n         });\n         console.log(error);\n       }\n     }\n   );\n };\n\n\n\n  render () {\n    const {\n      apiClient,\n      variables,\n      parameters,\n      executionResult,\n      previewHTML,\n      loading,\n      success,\n      ipfsLoading,\n      progress,\n      progressMessage\n    } = this.state;\n    if (!executionResult) return <Loader active />;\n    return (\n      <>\n          <div className={\"mainBackground\"}>\n              <BannerHeader/>\n        <Grid stackable={true}>\n          <Grid.Row>\n\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={3}>\n\n            </Grid.Column>\n            <Grid.Column  width={10}>\n              <div    className=\"contentPanel \">\n                <div className=\"ui segment contentHeader \">\n                  <h1 className=\"contentHeaderText playNormal\"><b>DEFINE</b></h1>\n                </div>\n\n                <Container textAlign='center'>\n                       <OpenLawForm  style={{width: '50%'}}\n                                   apiClient={apiClient}\n                                   executionResult={executionResult}\n                                   parameters={parameters}\n                                   onChangeFunction={this.onChange}\n                                   openLaw={Openlaw}\n                                   variables={variables}\n                                 /></Container>\n              </div>\n            </Grid.Column>\n            <Grid.Column width={3}>\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column width={3}>\n            </Grid.Column>\n            <Grid.Column width={10}>\n\n\n            <div className=\"contentPanel minnish \">\n              <div className=\"ui segment contentHeader \">\n                <h1 className=\"contentHeaderText playNormal\"><b>REVIEW</b></h1>\n              </div>\n\n               { this.state.showReview ? null\n                 :\n                 <Button id=\"generateButton\" className=\"huge pink ui right labeled icon button pillButton bottomMargin \" onClick={this.setTemplatePreview}>Generate Agreement<i className=\"play icon\"></i></Button>\n               }\n\n\n\n               <AgreementPreview  className=\"subPanel minnish\" id=\"preview\" previewHTML={previewHTML} />\n            </div>\n\n\n            </Grid.Column>\n            <Grid.Column width={3}>\n\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={3}>\n            </Grid.Column>\n            <Grid.Column width={10}>\n            <div className=\"contentPanel minnish \">\n\n            <div   className=\"ui segment contentHeader \">\n              <h1 className=\"ui playNormal contentHeaderText\"><b>FINALIZE</b></h1>\n            </div>\n\n            <Card.Group centered>\n  <Card className=\"customCard\">\n    <Card.Content>\n\n      <Card.Header>MAYBE LATER?</Card.Header>\n      <Card.Meta>Send Draft to Your Email</Card.Meta>\n      <Card.Description>\n         <p>You can forward the Draft to your lawyer or your co-founders. </p><p>You can convert the Draft into a Contract when you are ready to Form Entity.</p>\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <div  onClick={this.sendDraft} className='ui one buttons'>\n        <Button big color='blue' className='large pillButton draftButton'>\n          Save Draft\n        </Button>\n      </div>\n    </Card.Content>\n  </Card>\n\n  <Card className=\"customCard\">\n    <Card.Content>\n\n      <Card.Header>Pay Fiat</Card.Header>\n      <Card.Meta></Card.Meta>\n      <Card.Description>\n\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <div className='ui one buttons'>\n        <Button   onClick={this.payFiat} color='green' className='large pillButton'>\n          Pay Fiat\n        </Button>\n      </div>\n    </Card.Content>\n  </Card>\n\n  <Card className=\"customCard\">\n    <Card.Content>\n\n      <Card.Header>Pay Crypto</Card.Header>\n      <Card.Meta></Card.Meta>\n      <Card.Description>\n\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <div className='ui one buttons'>\n        <Button   onClick={this.payCrypto} color='purple' className='large pillButton'>\n          Pay Crypto\n        </Button>\n      </div>\n    </Card.Content>\n  </Card>\n\n\n  <Card className=\"customCard\">\n    <Card.Content>\n\n      <Card.Header>LET'S DO IT</Card.Header>\n      <Card.Meta>Issue Formation Agreement</Card.Meta>\n      <Card.Description>\n        <p>You will receive an e-mail requesting autorization for 'Etherize Entities' to Form Entity on your behalf. </p>\n        <p>No Payment is due until Entity's viability is Verified.</p>\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <div className='ui one buttons'>\n        <Button   onClick={this.onSubmit} color='pink' className='large pillButton'>\n          Pay Later\n        </Button>\n      </div>\n    </Card.Content>\n  </Card>\n\n</Card.Group>\n)\n\n\n\n\n             </div>\n            </Grid.Column>\n            <Grid.Column width={3}>\n\n            </Grid.Column>\n          </Grid.Row>\n\n        </Grid>\n          </div>\n      </>\n    );\n\n\n\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}